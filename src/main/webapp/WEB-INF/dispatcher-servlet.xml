<?xml version="1.0" encoding="UTF-8"?>
<!-- spring配置文件 -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"  
	xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd ">

<!-- 扫描器 -->
	<context:component-scan base-package="com.gwang.spring.mybatis.demo.controller">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<context:component-scan base-package="com.gwang.spring.mybatis.demo.test.controller">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

<!-- MVC注解对响应的设置，jackson的jar包需要的配置 -->
	<mvc:annotation-driven />
	
<!-- 配置拦截器 -->
	<mvc:interceptors>
		<!-- <bean class="com.gwang.spring.mybatis.demo.test.interceptor.MyInterceptor"></bean> --><!-- 拦截所有url -->
		<mvc:interceptor>
			<!-- <mvc:exclude-mapping path="/*/add*"/> --><!-- 不拦截某一类请求 -->
			<mvc:mapping path="/user/*"/><!-- 拦截某一类请求 -->
			<mvc:mapping path="/*/find*"/><!-- 拦截所有查询请求 -->
			<bean class="com.gwang.spring.mybatis.demo.test.interceptor.MyInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- <mvc:resources mapping="/static/**" location="/" cache-period="28800"/> -->
	<mvc:resources mapping="/css/**" location="/css/" cache-period="28800"/>
	<mvc:resources mapping="/imgs/**" location="/imgs/" cache-period="28800"/>
	<mvc:resources mapping="/js/**" location="/js/" cache-period="28800"/>
	<!-- <mvc:resources mapping="/upload/**" location="file:#{T(com.haoyoubang.p2p.utils.Config).UPLOAD_IMAGE_PATH}" cache-period="28800"/> -->

<!-- 视图解析器：用于定位资源 -->
 	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean> 
	
<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="defaultEncoding" value="UTF-8"/>  <!-- 默认编码 -->
        <property name="maxInMemorySize" value="10240"/>  <!-- 最大内存大小 -->
        <property name="uploadTempDir" value="/upload/"/> <!-- 上传后的目录（WebUtils#TEMP_DIR_CONTEXT_ATTRIBUTE） -->
        <!-- 指定所上传文件的总大小不能超过5000KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和;-1代表无限制 -->  
        <property name="maxUploadSize" value="5000000"/>  
    </bean>  
      
    <!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->  
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->  
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
                <!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->  
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error</prop>  
            </props>  
        </property>  
    </bean>  
    
    <!-- spring 定时任务配置 -->
    <task:executor id="executor" pool-size="5" />  
    <task:scheduler id="scheduler" pool-size="10" />  
    <task:annotation-driven executor="executor" scheduler="scheduler" />  
	
</beans>
